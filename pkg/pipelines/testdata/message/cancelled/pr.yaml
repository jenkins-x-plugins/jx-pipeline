apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/cloneURI: https://github.com/jenkins-x-plugins/jx-project.git
    lighthouse.jenkins-x.io/job: pr
  creationTimestamp: "2022-06-13T20:59:06Z"
  generateName: s-x-plugins-jx-project-pr-464-pr-
  generation: 3
  labels:
    created-by-lighthouse: "true"
    event-GUID: 92332760-eb5b-11ec-8ac2-2d35bcf02698
    lighthouse.jenkins-x.io/baseSHA: 05a611975222867c14c5992a4322204b5cb52eae
    lighthouse.jenkins-x.io/branch: PR-464
    lighthouse.jenkins-x.io/buildNum: "1655153945931"
    lighthouse.jenkins-x.io/context: pr
    lighthouse.jenkins-x.io/id: s-x-plugins-jx-project-pr-464-pr-72m49
    lighthouse.jenkins-x.io/job: pr
    lighthouse.jenkins-x.io/lastCommitSHA: ec22087260957090cdf327d2669975b24fe03a91
    lighthouse.jenkins-x.io/refs.org: jenkins-x-plugins
    lighthouse.jenkins-x.io/refs.pull: "464"
    lighthouse.jenkins-x.io/refs.repo: jx-project
    lighthouse.jenkins-x.io/type: presubmit
    tekton.dev/pipeline: s-x-plugins-jx-project-pr-464-pr-m2z8c
  managedFields:
  - apiVersion: tekton.dev/v1beta1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:lighthouse.jenkins-x.io/cloneURI: {}
          f:lighthouse.jenkins-x.io/job: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:created-by-lighthouse: {}
          f:event-GUID: {}
          f:lighthouse.jenkins-x.io/baseSHA: {}
          f:lighthouse.jenkins-x.io/branch: {}
          f:lighthouse.jenkins-x.io/buildNum: {}
          f:lighthouse.jenkins-x.io/context: {}
          f:lighthouse.jenkins-x.io/id: {}
          f:lighthouse.jenkins-x.io/job: {}
          f:lighthouse.jenkins-x.io/lastCommitSHA: {}
          f:lighthouse.jenkins-x.io/refs.org: {}
          f:lighthouse.jenkins-x.io/refs.pull: {}
          f:lighthouse.jenkins-x.io/refs.repo: {}
          f:lighthouse.jenkins-x.io/type: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"2b952c54-01a1-4945-8c10-bbfeedcca8cc"}:
            .: {}
            f:apiVersion: {}
            f:controller: {}
            f:kind: {}
            f:name: {}
            f:uid: {}
      f:spec:
        .: {}
        f:params: {}
        f:pipelineSpec:
          .: {}
          f:params: {}
          f:tasks: {}
          f:workspaces: {}
        f:podTemplate: {}
        f:serviceAccountName: {}
        f:timeout: {}
        f:workspaces: {}
    manager: lighthouse-tekton-controller
    operation: Update
    time: "2022-06-13T20:59:06Z"
  - apiVersion: tekton.dev/v1beta1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          f:tekton.dev/pipeline: {}
      f:status:
        .: {}
        f:completionTime: {}
        f:conditions: {}
        f:pipelineSpec:
          .: {}
          f:params: {}
          f:tasks: {}
          f:workspaces: {}
        f:startTime: {}
        f:taskRuns:
          .: {}
          f:s-x-plugins-jx-project-pr-464-pr-m2z8c-from-build-pack-m5gk2:
            .: {}
            f:pipelineTaskName: {}
            f:status:
              .: {}
              f:completionTime: {}
              f:conditions: {}
              f:podName: {}
              f:startTime: {}
              f:taskSpec:
                .: {}
                f:params: {}
                f:stepTemplate:
                  .: {}
                  f:env: {}
                  f:envFrom: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:workingDir: {}
                f:steps: {}
                f:workspaces: {}
    manager: controller
    operation: Update
    time: "2022-06-13T21:35:25Z"
  - apiVersion: tekton.dev/v1beta1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:status: {}
    manager: jx-pipeline-0.1.44
    operation: Update
    time: "2022-06-13T21:35:25Z"
  name: s-x-plugins-jx-project-pr-464-pr-m2z8c
  namespace: jx
  ownerReferences:
  - apiVersion: lighthouse.jenkins.io/v1alpha1
    controller: true
    kind: LighthouseJob
    name: s-x-plugins-jx-project-pr-464-pr-72m49
    uid: 2b952c54-01a1-4945-8c10-bbfeedcca8cc
  resourceVersion: "268833292"
  uid: 1fa77f73-eb58-4a8c-a270-82f5e7005b01
spec:
  params:
  - name: BUILD_ID
    value: ""
  - name: JOB_NAME
    value: ""
  - name: JOB_SPEC
    value: ""
  - name: JOB_TYPE
    value: ""
  - name: PULL_BASE_REF
    value: ""
  - name: PULL_BASE_SHA
    value: ""
  - name: PULL_NUMBER
    value: ""
  - name: PULL_PULL_REF
    value: ""
  - name: PULL_PULL_SHA
    value: ""
  - name: PULL_REFS
    value: ""
  - name: REPO_NAME
    value: ""
  - name: REPO_OWNER
    value: ""
  - name: REPO_URL
    value: ""
  - name: BUILD_ID
    value: "1655153945931"
  - name: JOB_NAME
    value: pr
  - name: JOB_SPEC
    value: type:presubmit
  - name: JOB_TYPE
    value: presubmit
  - name: PULL_BASE_REF
    value: main
  - name: PULL_BASE_SHA
    value: 05a611975222867c14c5992a4322204b5cb52eae
  - name: PULL_NUMBER
    value: "464"
  - name: PULL_PULL_REF
    value: refs/pull/464/head
  - name: PULL_PULL_SHA
    value: ec22087260957090cdf327d2669975b24fe03a91
  - name: PULL_REFS
    value: main:05a611975222867c14c5992a4322204b5cb52eae,464:ec22087260957090cdf327d2669975b24fe03a91:refs/pull/464/head
  - name: REPO_NAME
    value: jx-project
  - name: REPO_OWNER
    value: jenkins-x-plugins
  - name: REPO_URL
    value: https://github.com/jenkins-x-plugins/jx-project.git
  pipelineSpec:
    params:
    - description: the base git reference of the pull request
      name: PULL_BASE_REF
      type: string
    - default: ""
      description: git pull request number
      name: PULL_NUMBER
      type: string
    - default: ""
      description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
      name: PULL_PULL_REF
      type: string
    - description: the name of the job which is the trigger context name
      name: JOB_NAME
      type: string
    - default: ""
      description: git revision to checkout (branch, tag, sha, ref…)
      name: PULL_PULL_SHA
      type: string
    - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
      name: PULL_REFS
      type: string
    - description: '''the kind of job: postsubmit or presubmit'''
      name: JOB_TYPE
      type: string
    - description: git url to clone
      name: REPO_URL
      type: string
    - description: the unique build number
      name: BUILD_ID
      type: string
    - description: the specification of the job
      name: JOB_SPEC
      type: string
    - description: the git sha of the base of the pull request
      name: PULL_BASE_SHA
      type: string
    - description: git repository owner (user or organisation)
      name: REPO_OWNER
      type: string
    - description: git repository name
      name: REPO_NAME
      type: string
    tasks:
    - name: from-build-pack
      params:
      - name: BUILD_ID
        value: $(params.BUILD_ID)
      - name: JOB_NAME
        value: $(params.JOB_NAME)
      - name: JOB_SPEC
        value: $(params.JOB_SPEC)
      - name: JOB_TYPE
        value: $(params.JOB_TYPE)
      - name: PULL_BASE_REF
        value: $(params.PULL_BASE_REF)
      - name: PULL_BASE_SHA
        value: $(params.PULL_BASE_SHA)
      - name: PULL_NUMBER
        value: $(params.PULL_NUMBER)
      - name: PULL_PULL_REF
        value: $(params.PULL_PULL_REF)
      - name: PULL_PULL_SHA
        value: $(params.PULL_PULL_SHA)
      - name: PULL_REFS
        value: $(params.PULL_REFS)
      - name: REPO_NAME
        value: $(params.REPO_NAME)
      - name: REPO_OWNER
        value: $(params.REPO_OWNER)
      - name: REPO_URL
        value: $(params.REPO_URL)
      resources: {}
      taskSpec:
        metadata: {}
        params:
        - description: git repository name
          name: REPO_NAME
          type: string
        - description: the unique build number
          name: BUILD_ID
          type: string
        - default: ""
          description: git revision to checkout (branch, tag, sha, ref…)
          name: PULL_PULL_SHA
          type: string
        - description: the specification of the job
          name: JOB_SPEC
          type: string
        - description: '''the kind of job: postsubmit or presubmit'''
          name: JOB_TYPE
          type: string
        - default: ""
          description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
          name: PULL_PULL_REF
          type: string
        - description: the git sha of the base of the pull request
          name: PULL_BASE_SHA
          type: string
        - description: the base git reference of the pull request
          name: PULL_BASE_REF
          type: string
        - description: git url to clone
          name: REPO_URL
          type: string
        - description: git repository owner (user or organisation)
          name: REPO_OWNER
          type: string
        - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
          name: PULL_REFS
          type: string
        - description: the name of the job which is the trigger context name
          name: JOB_NAME
          type: string
        - default: ""
          description: git pull request number
          name: PULL_NUMBER
          type: string
        spec: null
        stepTemplate:
          env:
          - name: HOME
            value: /tekton/home
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          name: ""
          resources:
            requests:
              cpu: 400m
              memory: 600Mi
          workingDir: /workspace/source
        steps:
        - envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.27.0
          name: git-clone
          resources: {}
          script: |
            #!/bin/sh
            export SUBDIR="source"
            echo "git cloning url: $REPO_URL version $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER@$PULL_PULL_SHA to dir: $SUBDIR"
            git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
            git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
            git config --global credential.helper store
            git clone $REPO_URL $SUBDIR
            cd $SUBDIR
            git fetch origin $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER
            git checkout $(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER
            git reset --hard $PULL_PULL_SHA
            echo "checked out revision: $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER@$PULL_PULL_SHA to dir: $SUBDIR"
          workingDir: /workspace
        - envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          image: ghcr.io/jenkins-x/jx-boot:3.2.346
          name: git-merge
          resources: {}
          script: |
            #!/usr/bin/env sh
            jx gitops git merge
          workingDir: /workspace/source
        - image: ghcr.io/jenkins-x/jx-boot:3.2.346
          name: jx-variables
          resources:
            requests:
              cpu: 400m
              memory: 600Mi
          script: |
            #!/usr/bin/env sh
            jx gitops variables
            jx gitops pr variables
        - image: golang:1.17.9
          name: build-make-linux
          resources: {}
          script: |
            #!/bin/sh
            make linux
        - image: golang:1.17.9
          name: build-make-test
          resources: {}
          script: |
            #!/bin/sh
            make test
        - image: gcr.io/kaniko-project/executor:v1.6.0-debug
          name: build-container-build
          resources: {}
          script: |
            #!/busybox/sh
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=${DOCKERFILE_PATH:-Dockerfile} --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$REPO_NAME:$VERSION
        workspaces:
        - description: The git repo will be cloned onto the volume backing this workspace
          mountPath: /workspace
          name: output
      workspaces:
      - name: output
        workspace: output
    workspaces:
    - description: The git repo will be cloned onto the volume backing this workspace
      name: output
  podTemplate: {}
  serviceAccountName: tekton-bot
  status: Cancelled
  timeout: 240h0m0s
  workspaces:
  - emptyDir: {}
    name: output
status:
  completionTime: "2022-06-13T21:35:25Z"
  conditions:
  - lastTransitionTime: "2022-06-13T21:35:25Z"
    message: PipelineRun "s-x-plugins-jx-project-pr-464-pr-m2z8c" was cancelled
    reason: Cancelled
    status: "False"
    type: Succeeded
  pipelineSpec:
    params:
    - description: the unique build number
      name: BUILD_ID
      type: string
    - description: the base git reference of the pull request
      name: PULL_BASE_REF
      type: string
    - description: the git sha of the base of the pull request
      name: PULL_BASE_SHA
      type: string
    - description: '''the kind of job: postsubmit or presubmit'''
      name: JOB_TYPE
      type: string
    - default: ""
      description: git pull request number
      name: PULL_NUMBER
      type: string
    - default: ""
      description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
      name: PULL_PULL_REF
      type: string
    - default: ""
      description: git revision to checkout (branch, tag, sha, ref…)
      name: PULL_PULL_SHA
      type: string
    - description: git repository name
      name: REPO_NAME
      type: string
    - description: the specification of the job
      name: JOB_SPEC
      type: string
    - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
      name: PULL_REFS
      type: string
    - description: the name of the job which is the trigger context name
      name: JOB_NAME
      type: string
    - description: git repository owner (user or organisation)
      name: REPO_OWNER
      type: string
    - description: git url to clone
      name: REPO_URL
      type: string
    tasks:
    - name: from-build-pack
      params:
      - name: BUILD_ID
        value: $(params.BUILD_ID)
      - name: JOB_NAME
        value: $(params.JOB_NAME)
      - name: JOB_SPEC
        value: $(params.JOB_SPEC)
      - name: JOB_TYPE
        value: $(params.JOB_TYPE)
      - name: PULL_BASE_REF
        value: $(params.PULL_BASE_REF)
      - name: PULL_BASE_SHA
        value: $(params.PULL_BASE_SHA)
      - name: PULL_NUMBER
        value: $(params.PULL_NUMBER)
      - name: PULL_PULL_REF
        value: $(params.PULL_PULL_REF)
      - name: PULL_PULL_SHA
        value: $(params.PULL_PULL_SHA)
      - name: PULL_REFS
        value: $(params.PULL_REFS)
      - name: REPO_NAME
        value: $(params.REPO_NAME)
      - name: REPO_OWNER
        value: $(params.REPO_OWNER)
      - name: REPO_URL
        value: $(params.REPO_URL)
      resources: {}
      taskSpec:
        metadata: {}
        params:
        - description: '''the kind of job: postsubmit or presubmit'''
          name: JOB_TYPE
          type: string
        - description: git repository owner (user or organisation)
          name: REPO_OWNER
          type: string
        - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
          name: PULL_REFS
          type: string
        - description: the unique build number
          name: BUILD_ID
          type: string
        - default: ""
          description: git revision to checkout (branch, tag, sha, ref…)
          name: PULL_PULL_SHA
          type: string
        - description: the name of the job which is the trigger context name
          name: JOB_NAME
          type: string
        - description: the specification of the job
          name: JOB_SPEC
          type: string
        - description: the git sha of the base of the pull request
          name: PULL_BASE_SHA
          type: string
        - default: ""
          description: git pull request number
          name: PULL_NUMBER
          type: string
        - default: ""
          description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
          name: PULL_PULL_REF
          type: string
        - description: the base git reference of the pull request
          name: PULL_BASE_REF
          type: string
        - description: git url to clone
          name: REPO_URL
          type: string
        - description: git repository name
          name: REPO_NAME
          type: string
        spec: null
        stepTemplate:
          env:
          - name: HOME
            value: /tekton/home
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          name: ""
          resources:
            requests:
              cpu: 400m
              memory: 600Mi
          workingDir: /workspace/source
        steps:
        - env:
          - name: HOME
            value: /tekton/home
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.27.0
          name: git-clone
          resources:
            requests:
              cpu: 400m
              memory: 600Mi
          script: |
            #!/bin/sh
            export SUBDIR="source"
            echo "git cloning url: $REPO_URL version $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER@$PULL_PULL_SHA to dir: $SUBDIR"
            git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
            git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
            git config --global credential.helper store
            git clone $REPO_URL $SUBDIR
            cd $SUBDIR
            git fetch origin $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER
            git checkout $(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER
            git reset --hard $PULL_PULL_SHA
            echo "checked out revision: $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER@$PULL_PULL_SHA to dir: $SUBDIR"
          workingDir: /workspace
        - env:
          - name: HOME
            value: /tekton/home
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          image: ghcr.io/jenkins-x/jx-boot:3.2.346
          name: git-merge
          resources:
            requests:
              cpu: 400m
              memory: 600Mi
          script: |
            #!/usr/bin/env sh
            jx gitops git merge
          workingDir: /workspace/source
        - env:
          - name: HOME
            value: /tekton/home
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          image: ghcr.io/jenkins-x/jx-boot:3.2.346
          name: jx-variables
          resources:
            requests:
              cpu: 400m
              memory: 600Mi
          script: |
            #!/usr/bin/env sh
            jx gitops variables
            jx gitops pr variables
          workingDir: /workspace/source
        - env:
          - name: HOME
            value: /tekton/home
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          image: golang:1.17.9
          name: build-make-linux
          resources:
            requests:
              cpu: 400m
              memory: 600Mi
          script: |
            #!/bin/sh
            make linux
          workingDir: /workspace/source
        - env:
          - name: HOME
            value: /tekton/home
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          image: golang:1.17.9
          name: build-make-test
          resources:
            requests:
              cpu: 400m
              memory: 600Mi
          script: |
            #!/bin/sh
            make test
          workingDir: /workspace/source
        - env:
          - name: HOME
            value: /tekton/home
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          image: gcr.io/kaniko-project/executor:v1.6.0-debug
          name: build-container-build
          resources:
            requests:
              cpu: 400m
              memory: 600Mi
          script: |
            #!/busybox/sh
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=${DOCKERFILE_PATH:-Dockerfile} --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$REPO_NAME:$VERSION
          workingDir: /workspace/source
        workspaces:
        - description: The git repo will be cloned onto the volume backing this workspace
          mountPath: /workspace
          name: output
      workspaces:
      - name: output
        workspace: output
    workspaces:
    - description: The git repo will be cloned onto the volume backing this workspace
      name: output
  startTime: "2022-06-13T20:59:06Z"
  taskRuns:
    s-x-plugins-jx-project-pr-464-pr-m2z8c-from-build-pack-m5gk2:
      pipelineTaskName: from-build-pack
      status:
        completionTime: "2022-06-13T21:35:25Z"
        conditions:
        - lastTransitionTime: "2022-06-13T21:35:25Z"
          message: TaskRun "s-x-plugins-jx-project-pr-464-pr-m2z8c-from-build-pack-m5gk2"
            was cancelled
          reason: TaskRunCancelled
          status: "False"
          type: Succeeded
        podName: s-x-plugins-jx-project-pr-464-pr-m2z8c-from-build-pack-m5-ksczr
        startTime: "2022-06-13T20:59:06Z"
        taskSpec:
          params:
          - description: git pull reference strings of base and latest in the form
              'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
            name: PULL_REFS
            type: string
          - description: git repository name
            name: REPO_NAME
            type: string
          - default: ""
            description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
            name: PULL_PULL_REF
            type: string
          - default: ""
            description: git revision to checkout (branch, tag, sha, ref…)
            name: PULL_PULL_SHA
            type: string
          - description: git url to clone
            name: REPO_URL
            type: string
          - description: '''the kind of job: postsubmit or presubmit'''
            name: JOB_TYPE
            type: string
          - description: the base git reference of the pull request
            name: PULL_BASE_REF
            type: string
          - description: the name of the job which is the trigger context name
            name: JOB_NAME
            type: string
          - description: the specification of the job
            name: JOB_SPEC
            type: string
          - default: ""
            description: git pull request number
            name: PULL_NUMBER
            type: string
          - description: git repository owner (user or organisation)
            name: REPO_OWNER
            type: string
          - description: the unique build number
            name: BUILD_ID
            type: string
          - description: the git sha of the base of the pull request
            name: PULL_BASE_SHA
            type: string
          stepTemplate:
            env:
            - name: HOME
              value: /tekton/home
            - name: BUILD_ID
              value: $(params.BUILD_ID)
            - name: JOB_NAME
              value: $(params.JOB_NAME)
            - name: JOB_SPEC
              value: $(params.JOB_SPEC)
            - name: JOB_TYPE
              value: $(params.JOB_TYPE)
            - name: PULL_BASE_REF
              value: $(params.PULL_BASE_REF)
            - name: PULL_BASE_SHA
              value: $(params.PULL_BASE_SHA)
            - name: PULL_NUMBER
              value: $(params.PULL_NUMBER)
            - name: PULL_PULL_REF
              value: $(params.PULL_PULL_REF)
            - name: PULL_PULL_SHA
              value: $(params.PULL_PULL_SHA)
            - name: PULL_REFS
              value: $(params.PULL_REFS)
            - name: REPO_NAME
              value: $(params.REPO_NAME)
            - name: REPO_OWNER
              value: $(params.REPO_OWNER)
            - name: REPO_URL
              value: $(params.REPO_URL)
            envFrom:
            - secretRef:
                name: jx-boot-job-env-vars
                optional: true
            name: ""
            resources:
              requests:
                cpu: 400m
                memory: 600Mi
            workingDir: /workspace/source
          steps:
          - env:
            - name: HOME
              value: /tekton/home
            - name: BUILD_ID
              value: $(params.BUILD_ID)
            - name: JOB_NAME
              value: $(params.JOB_NAME)
            - name: JOB_SPEC
              value: $(params.JOB_SPEC)
            - name: JOB_TYPE
              value: $(params.JOB_TYPE)
            - name: PULL_BASE_REF
              value: $(params.PULL_BASE_REF)
            - name: PULL_BASE_SHA
              value: $(params.PULL_BASE_SHA)
            - name: PULL_NUMBER
              value: $(params.PULL_NUMBER)
            - name: PULL_PULL_REF
              value: $(params.PULL_PULL_REF)
            - name: PULL_PULL_SHA
              value: $(params.PULL_PULL_SHA)
            - name: PULL_REFS
              value: $(params.PULL_REFS)
            - name: REPO_NAME
              value: $(params.REPO_NAME)
            - name: REPO_OWNER
              value: $(params.REPO_OWNER)
            - name: REPO_URL
              value: $(params.REPO_URL)
            envFrom:
            - secretRef:
                name: jx-boot-job-env-vars
                optional: true
            image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.27.0
            name: git-clone
            resources:
              requests:
                cpu: 400m
                memory: 600Mi
            script: |
              #!/bin/sh
              export SUBDIR="source"
              echo "git cloning url: $REPO_URL version $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER@$PULL_PULL_SHA to dir: $SUBDIR"
              git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
              git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
              git config --global credential.helper store
              git clone $REPO_URL $SUBDIR
              cd $SUBDIR
              git fetch origin $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER
              git checkout $(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER
              git reset --hard $PULL_PULL_SHA
              echo "checked out revision: $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER@$PULL_PULL_SHA to dir: $SUBDIR"
            workingDir: /workspace
          - env:
            - name: HOME
              value: /tekton/home
            - name: BUILD_ID
              value: $(params.BUILD_ID)
            - name: JOB_NAME
              value: $(params.JOB_NAME)
            - name: JOB_SPEC
              value: $(params.JOB_SPEC)
            - name: JOB_TYPE
              value: $(params.JOB_TYPE)
            - name: PULL_BASE_REF
              value: $(params.PULL_BASE_REF)
            - name: PULL_BASE_SHA
              value: $(params.PULL_BASE_SHA)
            - name: PULL_NUMBER
              value: $(params.PULL_NUMBER)
            - name: PULL_PULL_REF
              value: $(params.PULL_PULL_REF)
            - name: PULL_PULL_SHA
              value: $(params.PULL_PULL_SHA)
            - name: PULL_REFS
              value: $(params.PULL_REFS)
            - name: REPO_NAME
              value: $(params.REPO_NAME)
            - name: REPO_OWNER
              value: $(params.REPO_OWNER)
            - name: REPO_URL
              value: $(params.REPO_URL)
            envFrom:
            - secretRef:
                name: jx-boot-job-env-vars
                optional: true
            image: ghcr.io/jenkins-x/jx-boot:3.2.346
            name: git-merge
            resources:
              requests:
                cpu: 400m
                memory: 600Mi
            script: |
              #!/usr/bin/env sh
              jx gitops git merge
            workingDir: /workspace/source
          - env:
            - name: HOME
              value: /tekton/home
            - name: BUILD_ID
              value: $(params.BUILD_ID)
            - name: JOB_NAME
              value: $(params.JOB_NAME)
            - name: JOB_SPEC
              value: $(params.JOB_SPEC)
            - name: JOB_TYPE
              value: $(params.JOB_TYPE)
            - name: PULL_BASE_REF
              value: $(params.PULL_BASE_REF)
            - name: PULL_BASE_SHA
              value: $(params.PULL_BASE_SHA)
            - name: PULL_NUMBER
              value: $(params.PULL_NUMBER)
            - name: PULL_PULL_REF
              value: $(params.PULL_PULL_REF)
            - name: PULL_PULL_SHA
              value: $(params.PULL_PULL_SHA)
            - name: PULL_REFS
              value: $(params.PULL_REFS)
            - name: REPO_NAME
              value: $(params.REPO_NAME)
            - name: REPO_OWNER
              value: $(params.REPO_OWNER)
            - name: REPO_URL
              value: $(params.REPO_URL)
            envFrom:
            - secretRef:
                name: jx-boot-job-env-vars
                optional: true
            image: ghcr.io/jenkins-x/jx-boot:3.2.346
            name: jx-variables
            resources:
              requests:
                cpu: 400m
                memory: 600Mi
            script: |
              #!/usr/bin/env sh
              jx gitops variables
              jx gitops pr variables
            workingDir: /workspace/source
          - env:
            - name: HOME
              value: /tekton/home
            - name: BUILD_ID
              value: $(params.BUILD_ID)
            - name: JOB_NAME
              value: $(params.JOB_NAME)
            - name: JOB_SPEC
              value: $(params.JOB_SPEC)
            - name: JOB_TYPE
              value: $(params.JOB_TYPE)
            - name: PULL_BASE_REF
              value: $(params.PULL_BASE_REF)
            - name: PULL_BASE_SHA
              value: $(params.PULL_BASE_SHA)
            - name: PULL_NUMBER
              value: $(params.PULL_NUMBER)
            - name: PULL_PULL_REF
              value: $(params.PULL_PULL_REF)
            - name: PULL_PULL_SHA
              value: $(params.PULL_PULL_SHA)
            - name: PULL_REFS
              value: $(params.PULL_REFS)
            - name: REPO_NAME
              value: $(params.REPO_NAME)
            - name: REPO_OWNER
              value: $(params.REPO_OWNER)
            - name: REPO_URL
              value: $(params.REPO_URL)
            envFrom:
            - secretRef:
                name: jx-boot-job-env-vars
                optional: true
            image: golang:1.17.9
            name: build-make-linux
            resources:
              requests:
                cpu: 400m
                memory: 600Mi
            script: |
              #!/bin/sh
              make linux
            workingDir: /workspace/source
          - env:
            - name: HOME
              value: /tekton/home
            - name: BUILD_ID
              value: $(params.BUILD_ID)
            - name: JOB_NAME
              value: $(params.JOB_NAME)
            - name: JOB_SPEC
              value: $(params.JOB_SPEC)
            - name: JOB_TYPE
              value: $(params.JOB_TYPE)
            - name: PULL_BASE_REF
              value: $(params.PULL_BASE_REF)
            - name: PULL_BASE_SHA
              value: $(params.PULL_BASE_SHA)
            - name: PULL_NUMBER
              value: $(params.PULL_NUMBER)
            - name: PULL_PULL_REF
              value: $(params.PULL_PULL_REF)
            - name: PULL_PULL_SHA
              value: $(params.PULL_PULL_SHA)
            - name: PULL_REFS
              value: $(params.PULL_REFS)
            - name: REPO_NAME
              value: $(params.REPO_NAME)
            - name: REPO_OWNER
              value: $(params.REPO_OWNER)
            - name: REPO_URL
              value: $(params.REPO_URL)
            envFrom:
            - secretRef:
                name: jx-boot-job-env-vars
                optional: true
            image: golang:1.17.9
            name: build-make-test
            resources:
              requests:
                cpu: 400m
                memory: 600Mi
            script: |
              #!/bin/sh
              make test
            workingDir: /workspace/source
          - env:
            - name: HOME
              value: /tekton/home
            - name: BUILD_ID
              value: $(params.BUILD_ID)
            - name: JOB_NAME
              value: $(params.JOB_NAME)
            - name: JOB_SPEC
              value: $(params.JOB_SPEC)
            - name: JOB_TYPE
              value: $(params.JOB_TYPE)
            - name: PULL_BASE_REF
              value: $(params.PULL_BASE_REF)
            - name: PULL_BASE_SHA
              value: $(params.PULL_BASE_SHA)
            - name: PULL_NUMBER
              value: $(params.PULL_NUMBER)
            - name: PULL_PULL_REF
              value: $(params.PULL_PULL_REF)
            - name: PULL_PULL_SHA
              value: $(params.PULL_PULL_SHA)
            - name: PULL_REFS
              value: $(params.PULL_REFS)
            - name: REPO_NAME
              value: $(params.REPO_NAME)
            - name: REPO_OWNER
              value: $(params.REPO_OWNER)
            - name: REPO_URL
              value: $(params.REPO_URL)
            envFrom:
            - secretRef:
                name: jx-boot-job-env-vars
                optional: true
            image: gcr.io/kaniko-project/executor:v1.6.0-debug
            name: build-container-build
            resources:
              requests:
                cpu: 400m
                memory: 600Mi
            script: |
              #!/busybox/sh
              source .jx/variables.sh
              cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
              /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=${DOCKERFILE_PATH:-Dockerfile} --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$REPO_NAME:$VERSION
            workingDir: /workspace/source
          workspaces:
          - description: The git repo will be cloned onto the volume backing this
              workspace
            mountPath: /workspace
            name: output
