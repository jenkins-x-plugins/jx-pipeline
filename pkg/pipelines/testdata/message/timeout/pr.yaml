apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/cloneURI: https://github.com/jenkins-x/jx.git
    lighthouse.jenkins-x.io/job: pr
  creationTimestamp: "2022-06-15T12:29:06Z"
  generateName: jenkins-x-jx-pr-8222-pr-
  generation: 2
  labels:
    created-by-lighthouse: "true"
    event-GUID: b8b83910-eca6-11ec-852a-d68f4015f834
    lighthouse.jenkins-x.io/baseSHA: 8d976ac06bb7fac1ad988b99b8996790f84ed17b
    lighthouse.jenkins-x.io/branch: PR-8222
    lighthouse.jenkins-x.io/buildNum: "1655296146196"
    lighthouse.jenkins-x.io/context: pr
    lighthouse.jenkins-x.io/id: jenkins-x-jx-pr-8222-pr-lhgwd
    lighthouse.jenkins-x.io/job: pr
    lighthouse.jenkins-x.io/lastCommitSHA: 3e2e8e817e93aeb40defbb987a93a6663dbf6950
    lighthouse.jenkins-x.io/refs.org: jenkins-x
    lighthouse.jenkins-x.io/refs.pull: "8222"
    lighthouse.jenkins-x.io/refs.repo: jx
    lighthouse.jenkins-x.io/type: presubmit
    tekton.dev/pipeline: jenkins-x-jx-pr-8222-pr-64cr8
  managedFields:
  - apiVersion: tekton.dev/v1beta1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:lighthouse.jenkins-x.io/cloneURI: {}
          f:lighthouse.jenkins-x.io/job: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:created-by-lighthouse: {}
          f:event-GUID: {}
          f:lighthouse.jenkins-x.io/baseSHA: {}
          f:lighthouse.jenkins-x.io/branch: {}
          f:lighthouse.jenkins-x.io/buildNum: {}
          f:lighthouse.jenkins-x.io/context: {}
          f:lighthouse.jenkins-x.io/id: {}
          f:lighthouse.jenkins-x.io/job: {}
          f:lighthouse.jenkins-x.io/lastCommitSHA: {}
          f:lighthouse.jenkins-x.io/refs.org: {}
          f:lighthouse.jenkins-x.io/refs.pull: {}
          f:lighthouse.jenkins-x.io/refs.repo: {}
          f:lighthouse.jenkins-x.io/type: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"48bdb3cc-c765-4a60-8b6a-83033b81b38f"}:
            .: {}
            f:apiVersion: {}
            f:controller: {}
            f:kind: {}
            f:name: {}
            f:uid: {}
      f:spec:
        .: {}
        f:params: {}
        f:pipelineSpec:
          .: {}
          f:params: {}
          f:tasks: {}
          f:workspaces: {}
        f:podTemplate: {}
        f:serviceAccountName: {}
        f:timeout: {}
        f:workspaces: {}
    manager: lighthouse-tekton-controller
    operation: Update
    time: "2022-06-15T12:29:06Z"
  - apiVersion: tekton.dev/v1beta1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          f:tekton.dev/pipeline: {}
      f:status:
        .: {}
        f:completionTime: {}
        f:conditions: {}
        f:pipelineSpec:
          .: {}
          f:params: {}
          f:tasks: {}
          f:workspaces: {}
        f:startTime: {}
        f:taskRuns:
          .: {}
          f:jenkins-x-jx-pr-8222-pr-64cr8-from-build-pack-4bfk2:
            .: {}
            f:pipelineTaskName: {}
            f:status:
              .: {}
              f:completionTime: {}
              f:conditions: {}
              f:podName: {}
              f:startTime: {}
              f:steps: {}
              f:taskSpec:
                .: {}
                f:params: {}
                f:stepTemplate:
                  .: {}
                  f:env: {}
                  f:envFrom: {}
                  f:name: {}
                  f:resources: {}
                  f:workingDir: {}
                f:steps: {}
                f:workspaces: {}
    manager: controller
    operation: Update
    time: "2022-06-15T13:29:06Z"
  name: jenkins-x-jx-pr-8222-pr-64cr8
  namespace: jx
  ownerReferences:
  - apiVersion: lighthouse.jenkins.io/v1alpha1
    controller: true
    kind: LighthouseJob
    name: jenkins-x-jx-pr-8222-pr-lhgwd
    uid: 48bdb3cc-c765-4a60-8b6a-83033b81b38f
  resourceVersion: "270520671"
  uid: 4a3d9803-676d-409f-bebb-43a79aa4024b
spec:
  params:
  - name: BUILD_ID
    value: ""
  - name: JOB_NAME
    value: ""
  - name: JOB_SPEC
    value: ""
  - name: JOB_TYPE
    value: ""
  - name: PULL_BASE_REF
    value: ""
  - name: PULL_BASE_SHA
    value: ""
  - name: PULL_NUMBER
    value: ""
  - name: PULL_PULL_REF
    value: ""
  - name: PULL_PULL_SHA
    value: ""
  - name: PULL_REFS
    value: ""
  - name: REPO_NAME
    value: ""
  - name: REPO_OWNER
    value: ""
  - name: REPO_URL
    value: ""
  - name: BUILD_ID
    value: "1655296146196"
  - name: JOB_NAME
    value: pr
  - name: JOB_SPEC
    value: type:presubmit
  - name: JOB_TYPE
    value: presubmit
  - name: PULL_BASE_REF
    value: main
  - name: PULL_BASE_SHA
    value: 8d976ac06bb7fac1ad988b99b8996790f84ed17b
  - name: PULL_NUMBER
    value: "8222"
  - name: PULL_PULL_REF
    value: refs/pull/8222/head
  - name: PULL_PULL_SHA
    value: 3e2e8e817e93aeb40defbb987a93a6663dbf6950
  - name: PULL_REFS
    value: main:8d976ac06bb7fac1ad988b99b8996790f84ed17b,8222:3e2e8e817e93aeb40defbb987a93a6663dbf6950:refs/pull/8222/head
  - name: REPO_NAME
    value: jx
  - name: REPO_OWNER
    value: jenkins-x
  - name: REPO_URL
    value: https://github.com/jenkins-x/jx.git
  pipelineSpec:
    params:
    - description: '''the kind of job: postsubmit or presubmit'''
      name: JOB_TYPE
      type: string
    - description: the base git reference of the pull request
      name: PULL_BASE_REF
      type: string
    - description: the git sha of the base of the pull request
      name: PULL_BASE_SHA
      type: string
    - description: git url to clone
      name: REPO_URL
      type: string
    - description: the name of the job which is the trigger context name
      name: JOB_NAME
      type: string
    - description: git repository name
      name: REPO_NAME
      type: string
    - description: git repository owner (user or organisation)
      name: REPO_OWNER
      type: string
    - description: the unique build number
      name: BUILD_ID
      type: string
    - default: ""
      description: git pull request number
      name: PULL_NUMBER
      type: string
    - default: ""
      description: git revision to checkout (branch, tag, sha, ref…)
      name: PULL_PULL_SHA
      type: string
    - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
      name: PULL_REFS
      type: string
    - description: the specification of the job
      name: JOB_SPEC
      type: string
    - default: ""
      description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
      name: PULL_PULL_REF
      type: string
    tasks:
    - name: from-build-pack
      params:
      - name: BUILD_ID
        value: $(params.BUILD_ID)
      - name: JOB_NAME
        value: $(params.JOB_NAME)
      - name: JOB_SPEC
        value: $(params.JOB_SPEC)
      - name: JOB_TYPE
        value: $(params.JOB_TYPE)
      - name: PULL_BASE_REF
        value: $(params.PULL_BASE_REF)
      - name: PULL_BASE_SHA
        value: $(params.PULL_BASE_SHA)
      - name: PULL_NUMBER
        value: $(params.PULL_NUMBER)
      - name: PULL_PULL_REF
        value: $(params.PULL_PULL_REF)
      - name: PULL_PULL_SHA
        value: $(params.PULL_PULL_SHA)
      - name: PULL_REFS
        value: $(params.PULL_REFS)
      - name: REPO_NAME
        value: $(params.REPO_NAME)
      - name: REPO_OWNER
        value: $(params.REPO_OWNER)
      - name: REPO_URL
        value: $(params.REPO_URL)
      resources: {}
      taskSpec:
        metadata: {}
        params:
        - default: ""
          description: git revision to checkout (branch, tag, sha, ref…)
          name: PULL_PULL_SHA
          type: string
        - default: ""
          description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
          name: PULL_PULL_REF
          type: string
        - description: the base git reference of the pull request
          name: PULL_BASE_REF
          type: string
        - description: the git sha of the base of the pull request
          name: PULL_BASE_SHA
          type: string
        - description: git url to clone
          name: REPO_URL
          type: string
        - default: ""
          description: git pull request number
          name: PULL_NUMBER
          type: string
        - description: git repository name
          name: REPO_NAME
          type: string
        - description: '''the kind of job: postsubmit or presubmit'''
          name: JOB_TYPE
          type: string
        - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
          name: PULL_REFS
          type: string
        - description: the specification of the job
          name: JOB_SPEC
          type: string
        - description: git repository owner (user or organisation)
          name: REPO_OWNER
          type: string
        - description: the unique build number
          name: BUILD_ID
          type: string
        - description: the name of the job which is the trigger context name
          name: JOB_NAME
          type: string
        spec: null
        stepTemplate:
          env:
          - name: HOME
            value: /tekton/home
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          name: ""
          resources: {}
          workingDir: /workspace/source
        steps:
        - envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.27.0
          name: git-clone
          resources: {}
          script: |
            #!/bin/sh
            export SUBDIR="source"
            echo "git cloning url: $REPO_URL version $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER@$PULL_PULL_SHA to dir: $SUBDIR"
            git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
            git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
            git config --global credential.helper store
            git clone $REPO_URL $SUBDIR
            cd $SUBDIR
            git fetch origin $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER
            git checkout $(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER
            git reset --hard $PULL_PULL_SHA
            echo "checked out revision: $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER@$PULL_PULL_SHA to dir: $SUBDIR"
          workingDir: /workspace
        - envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          image: ghcr.io/jenkins-x/jx-boot:3.2.352
          name: git-merge
          resources: {}
          script: |
            #!/usr/bin/env sh
            jx gitops git merge
          workingDir: /workspace/source
        - image: ghcr.io/jenkins-x/jx-boot:3.2.352
          name: jx-variables
          resources:
            requests:
              cpu: 400m
              memory: 600Mi
          script: |
            #!/usr/bin/env sh
            jx gitops variables
            jx gitops pr variables
        - image: golang:1.17.9
          name: build-make-linux
          resources: {}
          script: |
            #!/bin/sh
            make linux
        - image: golangci/golangci-lint:v1.42.1-alpine
          name: make-lint
          resources: {}
          script: |
            #!/bin/sh
            golangci-lint run --verbose --deadline 15m0s
        - image: golang:1.17.9
          name: build-make-test
          resources: {}
          script: |
            #!/bin/sh
            make test
        - image: 1.17.9-alpine3.15
          name: coverage-report
          resources: {}
          script: |
            #!/bin/sh
            make test-coverage
        workspaces:
        - description: The git repo will be cloned onto the volume backing this workspace
          mountPath: /workspace
          name: output
      workspaces:
      - name: output
        workspace: output
    workspaces:
    - description: The git repo will be cloned onto the volume backing this workspace
      name: output
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 1h0m0s
  workspaces:
  - emptyDir: {}
    name: output
status:
  completionTime: "2022-06-15T13:29:06Z"
  conditions:
  - lastTransitionTime: "2022-06-15T13:29:06Z"
    message: PipelineRun "jenkins-x-jx-pr-8222-pr-64cr8" failed to finish within "1h0m0s"
    reason: PipelineRunTimeout
    status: "False"
    type: Succeeded
  pipelineSpec:
    params:
    - description: the git sha of the base of the pull request
      name: PULL_BASE_SHA
      type: string
    - default: ""
      description: git revision to checkout (branch, tag, sha, ref…)
      name: PULL_PULL_SHA
      type: string
    - description: the unique build number
      name: BUILD_ID
      type: string
    - default: ""
      description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
      name: PULL_PULL_REF
      type: string
    - description: the specification of the job
      name: JOB_SPEC
      type: string
    - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
      name: PULL_REFS
      type: string
    - description: git repository name
      name: REPO_NAME
      type: string
    - description: git repository owner (user or organisation)
      name: REPO_OWNER
      type: string
    - description: the name of the job which is the trigger context name
      name: JOB_NAME
      type: string
    - description: '''the kind of job: postsubmit or presubmit'''
      name: JOB_TYPE
      type: string
    - description: git url to clone
      name: REPO_URL
      type: string
    - description: the base git reference of the pull request
      name: PULL_BASE_REF
      type: string
    - default: ""
      description: git pull request number
      name: PULL_NUMBER
      type: string
    tasks:
    - name: from-build-pack
      params:
      - name: BUILD_ID
        value: $(params.BUILD_ID)
      - name: JOB_NAME
        value: $(params.JOB_NAME)
      - name: JOB_SPEC
        value: $(params.JOB_SPEC)
      - name: JOB_TYPE
        value: $(params.JOB_TYPE)
      - name: PULL_BASE_REF
        value: $(params.PULL_BASE_REF)
      - name: PULL_BASE_SHA
        value: $(params.PULL_BASE_SHA)
      - name: PULL_NUMBER
        value: $(params.PULL_NUMBER)
      - name: PULL_PULL_REF
        value: $(params.PULL_PULL_REF)
      - name: PULL_PULL_SHA
        value: $(params.PULL_PULL_SHA)
      - name: PULL_REFS
        value: $(params.PULL_REFS)
      - name: REPO_NAME
        value: $(params.REPO_NAME)
      - name: REPO_OWNER
        value: $(params.REPO_OWNER)
      - name: REPO_URL
        value: $(params.REPO_URL)
      resources: {}
      taskSpec:
        metadata: {}
        params:
        - description: git repository owner (user or organisation)
          name: REPO_OWNER
          type: string
        - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
          name: PULL_REFS
          type: string
        - description: the unique build number
          name: BUILD_ID
          type: string
        - description: the specification of the job
          name: JOB_SPEC
          type: string
        - description: git repository name
          name: REPO_NAME
          type: string
        - description: the name of the job which is the trigger context name
          name: JOB_NAME
          type: string
        - description: the git sha of the base of the pull request
          name: PULL_BASE_SHA
          type: string
        - description: '''the kind of job: postsubmit or presubmit'''
          name: JOB_TYPE
          type: string
        - description: git url to clone
          name: REPO_URL
          type: string
        - default: ""
          description: git revision to checkout (branch, tag, sha, ref…)
          name: PULL_PULL_SHA
          type: string
        - default: ""
          description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
          name: PULL_PULL_REF
          type: string
        - description: the base git reference of the pull request
          name: PULL_BASE_REF
          type: string
        - default: ""
          description: git pull request number
          name: PULL_NUMBER
          type: string
        spec: null
        stepTemplate:
          env:
          - name: HOME
            value: /tekton/home
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          name: ""
          resources: {}
          workingDir: /workspace/source
        steps:
        - env:
          - name: HOME
            value: /tekton/home
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.27.0
          name: git-clone
          resources: {}
          script: |
            #!/bin/sh
            export SUBDIR="source"
            echo "git cloning url: $REPO_URL version $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER@$PULL_PULL_SHA to dir: $SUBDIR"
            git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
            git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
            git config --global credential.helper store
            git clone $REPO_URL $SUBDIR
            cd $SUBDIR
            git fetch origin $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER
            git checkout $(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER
            git reset --hard $PULL_PULL_SHA
            echo "checked out revision: $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER@$PULL_PULL_SHA to dir: $SUBDIR"
          workingDir: /workspace
        - env:
          - name: HOME
            value: /tekton/home
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          image: ghcr.io/jenkins-x/jx-boot:3.2.352
          name: git-merge
          resources: {}
          script: |
            #!/usr/bin/env sh
            jx gitops git merge
          workingDir: /workspace/source
        - env:
          - name: HOME
            value: /tekton/home
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          image: ghcr.io/jenkins-x/jx-boot:3.2.352
          name: jx-variables
          resources:
            requests:
              cpu: 400m
              memory: 600Mi
          script: |
            #!/usr/bin/env sh
            jx gitops variables
            jx gitops pr variables
          workingDir: /workspace/source
        - env:
          - name: HOME
            value: /tekton/home
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          image: golang:1.17.9
          name: build-make-linux
          resources: {}
          script: |
            #!/bin/sh
            make linux
          workingDir: /workspace/source
        - env:
          - name: HOME
            value: /tekton/home
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          image: golangci/golangci-lint:v1.42.1-alpine
          name: make-lint
          resources: {}
          script: |
            #!/bin/sh
            golangci-lint run --verbose --deadline 15m0s
          workingDir: /workspace/source
        - env:
          - name: HOME
            value: /tekton/home
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          image: golang:1.17.9
          name: build-make-test
          resources: {}
          script: |
            #!/bin/sh
            make test
          workingDir: /workspace/source
        - env:
          - name: HOME
            value: /tekton/home
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          image: 1.17.9-alpine3.15
          name: coverage-report
          resources: {}
          script: |
            #!/bin/sh
            make test-coverage
          workingDir: /workspace/source
        workspaces:
        - description: The git repo will be cloned onto the volume backing this workspace
          mountPath: /workspace
          name: output
      workspaces:
      - name: output
        workspace: output
    workspaces:
    - description: The git repo will be cloned onto the volume backing this workspace
      name: output
  startTime: "2022-06-15T12:29:06Z"
  taskRuns:
    jenkins-x-jx-pr-8222-pr-64cr8-from-build-pack-4bfk2:
      pipelineTaskName: from-build-pack
      status:
        completionTime: "2022-06-15T13:29:06Z"
        conditions:
        - lastTransitionTime: "2022-06-15T13:29:06Z"
          message: TaskRun "jenkins-x-jx-pr-8222-pr-64cr8-from-build-pack-4bfk2" failed
            to finish within "1h0m0s"
          reason: TaskRunTimeout
          status: "False"
          type: Succeeded
        podName: jenkins-x-jx-pr-8222-pr-64cr8-from-build-pack-4bfk2-pod-jbgn7
        startTime: "2022-06-15T12:29:06Z"
        steps:
        - container: step-git-clone
          imageID: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init@sha256:8bfb6edbd8ce4608af957a3a38444512c14713bc9fc0d60308f228c61be4c83f
          name: git-clone
          terminated:
            exitCode: 1
            finishedAt: "2022-06-15T13:29:06Z"
            reason: TaskRunTimeout
            startedAt: "2022-06-15T12:29:10Z"
        - container: step-git-merge
          imageID: ghcr.io/jenkins-x/jx-boot@sha256:29453a2fe6dd5ffef6ad564687864ffc1c01637b32cb77c9f86ef9f2dcc8c626
          name: git-merge
          terminated:
            exitCode: 1
            finishedAt: "2022-06-15T13:29:06Z"
            reason: TaskRunTimeout
            startedAt: "2022-06-15T12:29:10Z"
        - container: step-jx-variables
          imageID: ghcr.io/jenkins-x/jx-boot@sha256:29453a2fe6dd5ffef6ad564687864ffc1c01637b32cb77c9f86ef9f2dcc8c626
          name: jx-variables
          terminated:
            exitCode: 1
            finishedAt: "2022-06-15T13:29:06Z"
            reason: TaskRunTimeout
            startedAt: "2022-06-15T12:29:11Z"
        - container: step-build-make-linux
          imageID: docker.io/library/golang@sha256:724abf4dd44985d060f7aa91af5211eb2052491424bd497ba3ddc31f7cee969d
          name: build-make-linux
          terminated:
            exitCode: 1
            finishedAt: "2022-06-15T13:29:06Z"
            reason: TaskRunTimeout
            startedAt: "2022-06-15T12:29:11Z"
        - container: step-make-lint
          imageID: docker.io/golangci/golangci-lint@sha256:e32b22eaceaf8872a2cbd0f48ea96cd71a7530f98081914b7b23a795f4e4df1a
          name: make-lint
          terminated:
            exitCode: 1
            finishedAt: "2022-06-15T13:29:06Z"
            reason: TaskRunTimeout
            startedAt: "2022-06-15T12:29:11Z"
        - container: step-build-make-test
          imageID: docker.io/library/golang@sha256:724abf4dd44985d060f7aa91af5211eb2052491424bd497ba3ddc31f7cee969d
          name: build-make-test
          terminated:
            exitCode: 1
            finishedAt: "2022-06-15T13:29:06Z"
            reason: TaskRunTimeout
            startedAt: "2022-06-15T12:29:11Z"
        - container: step-coverage-report
          name: coverage-report
          terminated:
            exitCode: 1
            finishedAt: "2022-06-15T13:29:06Z"
            reason: TaskRunTimeout
            startedAt: null
        taskSpec:
          params:
          - default: ""
            description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
            name: PULL_PULL_REF
            type: string
          - description: the name of the job which is the trigger context name
            name: JOB_NAME
            type: string
          - default: ""
            description: git pull request number
            name: PULL_NUMBER
            type: string
          - default: ""
            description: git revision to checkout (branch, tag, sha, ref…)
            name: PULL_PULL_SHA
            type: string
          - description: git repository owner (user or organisation)
            name: REPO_OWNER
            type: string
          - description: the git sha of the base of the pull request
            name: PULL_BASE_SHA
            type: string
          - description: git pull reference strings of base and latest in the form
              'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
            name: PULL_REFS
            type: string
          - description: git repository name
            name: REPO_NAME
            type: string
          - description: the unique build number
            name: BUILD_ID
            type: string
          - description: the specification of the job
            name: JOB_SPEC
            type: string
          - description: '''the kind of job: postsubmit or presubmit'''
            name: JOB_TYPE
            type: string
          - description: the base git reference of the pull request
            name: PULL_BASE_REF
            type: string
          - description: git url to clone
            name: REPO_URL
            type: string
          stepTemplate:
            env:
            - name: HOME
              value: /tekton/home
            - name: BUILD_ID
              value: $(params.BUILD_ID)
            - name: JOB_NAME
              value: $(params.JOB_NAME)
            - name: JOB_SPEC
              value: $(params.JOB_SPEC)
            - name: JOB_TYPE
              value: $(params.JOB_TYPE)
            - name: PULL_BASE_REF
              value: $(params.PULL_BASE_REF)
            - name: PULL_BASE_SHA
              value: $(params.PULL_BASE_SHA)
            - name: PULL_NUMBER
              value: $(params.PULL_NUMBER)
            - name: PULL_PULL_REF
              value: $(params.PULL_PULL_REF)
            - name: PULL_PULL_SHA
              value: $(params.PULL_PULL_SHA)
            - name: PULL_REFS
              value: $(params.PULL_REFS)
            - name: REPO_NAME
              value: $(params.REPO_NAME)
            - name: REPO_OWNER
              value: $(params.REPO_OWNER)
            - name: REPO_URL
              value: $(params.REPO_URL)
            envFrom:
            - secretRef:
                name: jx-boot-job-env-vars
                optional: true
            name: ""
            resources: {}
            workingDir: /workspace/source
          steps:
          - env:
            - name: HOME
              value: /tekton/home
            - name: BUILD_ID
              value: $(params.BUILD_ID)
            - name: JOB_NAME
              value: $(params.JOB_NAME)
            - name: JOB_SPEC
              value: $(params.JOB_SPEC)
            - name: JOB_TYPE
              value: $(params.JOB_TYPE)
            - name: PULL_BASE_REF
              value: $(params.PULL_BASE_REF)
            - name: PULL_BASE_SHA
              value: $(params.PULL_BASE_SHA)
            - name: PULL_NUMBER
              value: $(params.PULL_NUMBER)
            - name: PULL_PULL_REF
              value: $(params.PULL_PULL_REF)
            - name: PULL_PULL_SHA
              value: $(params.PULL_PULL_SHA)
            - name: PULL_REFS
              value: $(params.PULL_REFS)
            - name: REPO_NAME
              value: $(params.REPO_NAME)
            - name: REPO_OWNER
              value: $(params.REPO_OWNER)
            - name: REPO_URL
              value: $(params.REPO_URL)
            envFrom:
            - secretRef:
                name: jx-boot-job-env-vars
                optional: true
            image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.27.0
            name: git-clone
            resources: {}
            script: |
              #!/bin/sh
              export SUBDIR="source"
              echo "git cloning url: $REPO_URL version $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER@$PULL_PULL_SHA to dir: $SUBDIR"
              git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
              git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
              git config --global credential.helper store
              git clone $REPO_URL $SUBDIR
              cd $SUBDIR
              git fetch origin $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER
              git checkout $(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER
              git reset --hard $PULL_PULL_SHA
              echo "checked out revision: $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER@$PULL_PULL_SHA to dir: $SUBDIR"
            workingDir: /workspace
          - env:
            - name: HOME
              value: /tekton/home
            - name: BUILD_ID
              value: $(params.BUILD_ID)
            - name: JOB_NAME
              value: $(params.JOB_NAME)
            - name: JOB_SPEC
              value: $(params.JOB_SPEC)
            - name: JOB_TYPE
              value: $(params.JOB_TYPE)
            - name: PULL_BASE_REF
              value: $(params.PULL_BASE_REF)
            - name: PULL_BASE_SHA
              value: $(params.PULL_BASE_SHA)
            - name: PULL_NUMBER
              value: $(params.PULL_NUMBER)
            - name: PULL_PULL_REF
              value: $(params.PULL_PULL_REF)
            - name: PULL_PULL_SHA
              value: $(params.PULL_PULL_SHA)
            - name: PULL_REFS
              value: $(params.PULL_REFS)
            - name: REPO_NAME
              value: $(params.REPO_NAME)
            - name: REPO_OWNER
              value: $(params.REPO_OWNER)
            - name: REPO_URL
              value: $(params.REPO_URL)
            envFrom:
            - secretRef:
                name: jx-boot-job-env-vars
                optional: true
            image: ghcr.io/jenkins-x/jx-boot:3.2.352
            name: git-merge
            resources: {}
            script: |
              #!/usr/bin/env sh
              jx gitops git merge
            workingDir: /workspace/source
          - env:
            - name: HOME
              value: /tekton/home
            - name: BUILD_ID
              value: $(params.BUILD_ID)
            - name: JOB_NAME
              value: $(params.JOB_NAME)
            - name: JOB_SPEC
              value: $(params.JOB_SPEC)
            - name: JOB_TYPE
              value: $(params.JOB_TYPE)
            - name: PULL_BASE_REF
              value: $(params.PULL_BASE_REF)
            - name: PULL_BASE_SHA
              value: $(params.PULL_BASE_SHA)
            - name: PULL_NUMBER
              value: $(params.PULL_NUMBER)
            - name: PULL_PULL_REF
              value: $(params.PULL_PULL_REF)
            - name: PULL_PULL_SHA
              value: $(params.PULL_PULL_SHA)
            - name: PULL_REFS
              value: $(params.PULL_REFS)
            - name: REPO_NAME
              value: $(params.REPO_NAME)
            - name: REPO_OWNER
              value: $(params.REPO_OWNER)
            - name: REPO_URL
              value: $(params.REPO_URL)
            envFrom:
            - secretRef:
                name: jx-boot-job-env-vars
                optional: true
            image: ghcr.io/jenkins-x/jx-boot:3.2.352
            name: jx-variables
            resources:
              requests:
                cpu: 400m
                memory: 600Mi
            script: |
              #!/usr/bin/env sh
              jx gitops variables
              jx gitops pr variables
            workingDir: /workspace/source
          - env:
            - name: HOME
              value: /tekton/home
            - name: BUILD_ID
              value: $(params.BUILD_ID)
            - name: JOB_NAME
              value: $(params.JOB_NAME)
            - name: JOB_SPEC
              value: $(params.JOB_SPEC)
            - name: JOB_TYPE
              value: $(params.JOB_TYPE)
            - name: PULL_BASE_REF
              value: $(params.PULL_BASE_REF)
            - name: PULL_BASE_SHA
              value: $(params.PULL_BASE_SHA)
            - name: PULL_NUMBER
              value: $(params.PULL_NUMBER)
            - name: PULL_PULL_REF
              value: $(params.PULL_PULL_REF)
            - name: PULL_PULL_SHA
              value: $(params.PULL_PULL_SHA)
            - name: PULL_REFS
              value: $(params.PULL_REFS)
            - name: REPO_NAME
              value: $(params.REPO_NAME)
            - name: REPO_OWNER
              value: $(params.REPO_OWNER)
            - name: REPO_URL
              value: $(params.REPO_URL)
            envFrom:
            - secretRef:
                name: jx-boot-job-env-vars
                optional: true
            image: golang:1.17.9
            name: build-make-linux
            resources: {}
            script: |
              #!/bin/sh
              make linux
            workingDir: /workspace/source
          - env:
            - name: HOME
              value: /tekton/home
            - name: BUILD_ID
              value: $(params.BUILD_ID)
            - name: JOB_NAME
              value: $(params.JOB_NAME)
            - name: JOB_SPEC
              value: $(params.JOB_SPEC)
            - name: JOB_TYPE
              value: $(params.JOB_TYPE)
            - name: PULL_BASE_REF
              value: $(params.PULL_BASE_REF)
            - name: PULL_BASE_SHA
              value: $(params.PULL_BASE_SHA)
            - name: PULL_NUMBER
              value: $(params.PULL_NUMBER)
            - name: PULL_PULL_REF
              value: $(params.PULL_PULL_REF)
            - name: PULL_PULL_SHA
              value: $(params.PULL_PULL_SHA)
            - name: PULL_REFS
              value: $(params.PULL_REFS)
            - name: REPO_NAME
              value: $(params.REPO_NAME)
            - name: REPO_OWNER
              value: $(params.REPO_OWNER)
            - name: REPO_URL
              value: $(params.REPO_URL)
            envFrom:
            - secretRef:
                name: jx-boot-job-env-vars
                optional: true
            image: golangci/golangci-lint:v1.42.1-alpine
            name: make-lint
            resources: {}
            script: |
              #!/bin/sh
              golangci-lint run --verbose --deadline 15m0s
            workingDir: /workspace/source
          - env:
            - name: HOME
              value: /tekton/home
            - name: BUILD_ID
              value: $(params.BUILD_ID)
            - name: JOB_NAME
              value: $(params.JOB_NAME)
            - name: JOB_SPEC
              value: $(params.JOB_SPEC)
            - name: JOB_TYPE
              value: $(params.JOB_TYPE)
            - name: PULL_BASE_REF
              value: $(params.PULL_BASE_REF)
            - name: PULL_BASE_SHA
              value: $(params.PULL_BASE_SHA)
            - name: PULL_NUMBER
              value: $(params.PULL_NUMBER)
            - name: PULL_PULL_REF
              value: $(params.PULL_PULL_REF)
            - name: PULL_PULL_SHA
              value: $(params.PULL_PULL_SHA)
            - name: PULL_REFS
              value: $(params.PULL_REFS)
            - name: REPO_NAME
              value: $(params.REPO_NAME)
            - name: REPO_OWNER
              value: $(params.REPO_OWNER)
            - name: REPO_URL
              value: $(params.REPO_URL)
            envFrom:
            - secretRef:
                name: jx-boot-job-env-vars
                optional: true
            image: golang:1.17.9
            name: build-make-test
            resources: {}
            script: |
              #!/bin/sh
              make test
            workingDir: /workspace/source
          - env:
            - name: HOME
              value: /tekton/home
            - name: BUILD_ID
              value: $(params.BUILD_ID)
            - name: JOB_NAME
              value: $(params.JOB_NAME)
            - name: JOB_SPEC
              value: $(params.JOB_SPEC)
            - name: JOB_TYPE
              value: $(params.JOB_TYPE)
            - name: PULL_BASE_REF
              value: $(params.PULL_BASE_REF)
            - name: PULL_BASE_SHA
              value: $(params.PULL_BASE_SHA)
            - name: PULL_NUMBER
              value: $(params.PULL_NUMBER)
            - name: PULL_PULL_REF
              value: $(params.PULL_PULL_REF)
            - name: PULL_PULL_SHA
              value: $(params.PULL_PULL_SHA)
            - name: PULL_REFS
              value: $(params.PULL_REFS)
            - name: REPO_NAME
              value: $(params.REPO_NAME)
            - name: REPO_OWNER
              value: $(params.REPO_OWNER)
            - name: REPO_URL
              value: $(params.REPO_URL)
            envFrom:
            - secretRef:
                name: jx-boot-job-env-vars
                optional: true
            image: 1.17.9-alpine3.15
            name: coverage-report
            resources: {}
            script: |
              #!/bin/sh
              make test-coverage
            workingDir: /workspace/source
          workspaces:
          - description: The git repo will be cloned onto the volume backing this
              workspace
            mountPath: /workspace
            name: output
